AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Application. This template is partially managed by Amazon.Lambda.Annotations (v1.3.0.0).
Parameters:
  SendEmailTopicArn:
    Type: String
    Description: ARN of the Send Email topic
Resources:
  LambdaAuthorizer:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Access.AccessFunction_FunctionHandler_Generated::FunctionHandler
  IdentityApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins: "'*'"
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        Authorizers:
          LambdaAuthorizer:
            FunctionArn: !GetAtt LambdaAuthorizer.Arn
            AuthorizerPayloadFormatVersion: '2.0'
  Login:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPost
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_Login_Generated::Login
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/login
            Method: POST
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  Register:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPost
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_Register_Generated::Register
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/register
            Method: POST
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  GetUser:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootGet
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.User.UserFunctions_GetUser_Generated::GetUser
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /api/v1/user
            Method: GET
            ApiId: !Ref IdentityApi
  UpdateUser:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.User.UserFunctions_UpdateUser_Generated::UpdateUser
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/user
            Method: PUT
            ApiId: !Ref IdentityApi
  RequestEmailChange:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.User.UserFunctions_RequestEmailChange_Generated::RequestEmailChange
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/user/change-email
            Method: PUT
            ApiId: !Ref IdentityApi
  Logout:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.User.UserFunctions_Logout_Generated::Logout
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/user/logout
            Method: PUT
            ApiId: !Ref IdentityApi
  RemoveUser:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootDelete
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.User.UserFunctions_RemoveUser_Generated::RemoveUser
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootDelete:
          Type: HttpApi
          Properties:
            Path: /api/v1/user/remove
            Method: DELETE
            ApiId: !Ref IdentityApi
  VerifyEmail:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_VerifyEmail_Generated::VerifyEmail
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/verify-email
            Method: PUT
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  Refresh:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_Refresh_Generated::Refresh
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/refresh
            Method: PUT
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  ResendEmail:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_ResendEmail_Generated::ResendEmail
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/resend-email
            Method: PUT
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  ForgotPassword:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_ForgotPassword_Generated::ForgotPassword
      Environment:
        Variables:
          SendEmailTopicArn: !Ref SendEmailTopicArn
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/forgot-password/request
            Method: PUT
            ApiId: !Ref IdentityApi
            Auth:
              Authorizer: NONE
  NewPassword:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/FullAccess
      PackageType: Zip
      Handler: Identity.Functions::Identity.Functions.Functions.Auth.AuthFunctions_NewPassword_Generated::NewPassword
      Events:
        RootPut:
          Type: HttpApi
          Properties:
            Path: /api/v1/auth/forgot-password/new
            Method: PUT
Outputs:
  ApiURL:
    Description: API endpoint URL for Prod environment
    Value:
      Fn::Sub: https://${IdentityApi}.execute-api.${AWS::Region}.amazonaws.com/
  LambdaAuthorizerArn:
    Description: "The ARN of the Lambda Authorizer"
    Value: !GetAtt LambdaAuthorizer.Arn
